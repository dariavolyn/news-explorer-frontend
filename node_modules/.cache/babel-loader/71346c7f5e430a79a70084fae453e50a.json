{"ast":null,"code":"class MainApi {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : console.log(`Error: ${res.status}`);\n  }\n\n  registerUser(email, password, username) {\n    return fetch(`${this.baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        username\n      })\n    }).then(this._checkResponse);\n  }\n\n  authorizeUser(email, password) {\n    return fetch(`${this.baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse).then(data => {\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        return data;\n      } else {\n        return;\n      }\n    });\n  }\n\n  getContent(token) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(this._checkResponse).then(data => data);\n  }\n\n  getUserInfo(token) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n\n  saveArticle({\n    cardID,\n    link,\n    image,\n    keyword,\n    title,\n    text,\n    date,\n    source,\n    owner\n  }) {\n    return fetch(`${this.baseUrl}/articles/${cardID}`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        cardID,\n        link,\n        image,\n        keyword,\n        title,\n        text,\n        date,\n        source,\n        owner\n      })\n    }).then(this._checkResponse);\n  }\n\n  getSavedArticles() {\n    return fetch(`${this.baseUrl}/articles`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(this._checkResponse);\n  }\n\n}\n\nconst mainApi = new MainApi({\n  baseUrl: process.env.NODE_ENV === \"production\" ? \"https://api.daria-news.students.nomoreparties.site\" : \"http://localhost:3000\"\n});\nexport default mainApi;","map":{"version":3,"sources":["/Users/dashon/Desktop/news-explorer-frontend/src/utils/MainApi.js"],"names":["MainApi","constructor","baseUrl","headers","_checkResponse","res","ok","json","console","log","status","registerUser","email","password","username","fetch","method","body","JSON","stringify","then","authorizeUser","data","token","localStorage","setItem","getContent","getUserInfo","saveArticle","cardID","link","image","keyword","title","text","date","source","owner","getSavedArticles","mainApi","process","env","NODE_ENV"],"mappings":"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","sourcesContent":["class MainApi {\n    constructor({ baseUrl, headers }) {\n        this.baseUrl = baseUrl\n        this.headers = headers\n    }\n\n    _checkResponse(res) {\n        return res.ok ? res.json() : console.log(`Error: ${res.status}`)\n    }\n\n    registerUser(email, password, username) {\n        return fetch(`${this.baseUrl}/signup`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password, username })\n        })\n            .then(this._checkResponse)\n    }\n\n    authorizeUser(email, password) {\n        return fetch(`${this.baseUrl}/signin`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password }),\n        })\n            .then(this._checkResponse)\n            .then((data) => {\n                if (data.token) {\n                    localStorage.setItem('token', data.token);\n                    return data;\n                } else {\n                    return;\n                }\n            })\n    }\n\n    getContent(token) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        })\n            .then(this._checkResponse)\n            .then(data => data)\n    }\n\n    getUserInfo(token) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        })\n            .then(this._checkResponse)\n    }\n\n    saveArticle({ cardID, link, image, keyword, title, text, date, source, owner }) {\n        return fetch(`${this.baseUrl}/articles/${cardID}`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ cardID, link, image, keyword, title, text, date, source, owner })\n        })\n            .then(this._checkResponse)\n    }\n\n    getSavedArticles() {\n        return fetch(`${this.baseUrl}/articles`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(this._checkResponse)\n    }\n}\n\nconst mainApi = new MainApi({\n    baseUrl:\n        process.env.NODE_ENV === \"production\"\n            ? \"https://api.daria-news.students.nomoreparties.site\"\n            : \"http://localhost:3000\",\n})\n\nexport default mainApi;"]},"metadata":{},"sourceType":"module"}