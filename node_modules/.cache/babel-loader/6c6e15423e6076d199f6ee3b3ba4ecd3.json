{"ast":null,"code":"class Auth {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? res.json() : console.log(`Error: ${res.status}`);\n  }\n\n  registerUser({\n    email,\n    password\n  }) {\n    return fetch(`${this.baseUrl}/signup`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse);\n  }\n\n  authorizeUser({\n    email,\n    password\n  }) {\n    return fetch(`${this.baseUrl}/signin`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(this._checkResponse).then(data => {\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        return data;\n      } else {\n        return;\n      }\n    });\n  }\n\n  getContent(token) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(this._checkResponse).then(data => data);\n  }\n\n}\n\nconst auth = new Auth({\n  baseUrl: \"dariavolyn.students.nomoreparties.site\"\n});\nexport default auth;","map":{"version":3,"sources":["/Users/dashon/Desktop/react-around-api-full/frontend/src/utils/auth.js"],"names":["Auth","constructor","baseUrl","headers","_checkResponse","res","ok","json","console","log","status","registerUser","email","password","fetch","method","body","JSON","stringify","then","authorizeUser","data","token","localStorage","setItem","getContent","auth"],"mappings":"AAAA,MAAMA,IAAN,CAAW;AACPC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAuB;AAC9B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AAEDC,EAAAA,cAAc,CAACC,GAAD,EAAM;AAChB,WAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,GAAR,CAAa,UAASJ,GAAG,CAACK,MAAO,EAAjC,CAA7B;AACH;;AAEDC,EAAAA,YAAY,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAsB;AAC9B,WAAOC,KAAK,CAAE,GAAE,KAAKZ,OAAQ,SAAjB,EAA2B;AACnCa,MAAAA,MAAM,EAAE,MAD2B;AAEnCZ,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAF0B;AAMnCa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAf;AAN6B,KAA3B,CAAL,CAQNM,IARM,CAQD,KAAKf,cARJ,CAAP;AASH;;AAEDgB,EAAAA,aAAa,CAAC;AAAER,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAsB;AAC/B,WAAOC,KAAK,CAAE,GAAE,KAAKZ,OAAQ,SAAjB,EAA2B;AACnCa,MAAAA,MAAM,EAAE,MAD2B;AAEnCZ,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAF0B;AAMnCa,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAf;AAN6B,KAA3B,CAAL,CAQFM,IARE,CAQG,KAAKf,cARR,EASFe,IATE,CASIE,IAAD,IAAU;AACZ,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACC,KAAnC;AACA,eAAOD,IAAP;AACH,OAHD,MAGO;AACH;AACH;AACJ,KAhBE,CAAP;AAiBH;;AAEDI,EAAAA,UAAU,CAACH,KAAD,EAAQ;AACd,WAAOR,KAAK,CAAE,GAAE,KAAKZ,OAAQ,WAAjB,EAA6B;AACrCa,MAAAA,MAAM,EAAE,KAD6B;AAErCZ,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAkB,UAASmB,KAAM;AAH5B;AAF4B,KAA7B,CAAL,CAQFH,IARE,CAQG,KAAKf,cARR,EASFe,IATE,CASGE,IAAI,IAAIA,IATX,CAAP;AAUH;;AArDM;;AAwDX,MAAMK,IAAI,GAAG,IAAI1B,IAAJ,CAAS;AAClBE,EAAAA,OAAO,EAAE;AADS,CAAT,CAAb;AAIA,eAAewB,IAAf","sourcesContent":["class Auth {\n    constructor({ baseUrl, headers }) {\n        this.baseUrl = baseUrl\n        this.headers = headers\n    }\n\n    _checkResponse(res) {\n        return res.ok ? res.json() : console.log(`Error: ${res.status}`)\n    }\n\n    registerUser({ email, password }) {\n        return fetch(`${this.baseUrl}/signup`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        })\n        .then(this._checkResponse)\n    }\n\n    authorizeUser({ email, password }) {\n        return fetch(`${this.baseUrl}/signin`, {\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password }),\n        })\n            .then(this._checkResponse)\n            .then((data) => {\n                if (data.token) {\n                    localStorage.setItem('token', data.token);\n                    return data;\n                } else {\n                    return;\n                }\n            })\n    }\n\n    getContent(token) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        })\n            .then(this._checkResponse)\n            .then(data => data)\n    }\n}\n\nconst auth = new Auth({\n    baseUrl: \"dariavolyn.students.nomoreparties.site\"\n})\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}