{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\n\nfunction FormValidation() {\n  _s();\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const handleChange = event => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    setValues({ ...values,\n      [name]: value\n    });\n    setErrors({ ...errors,\n      [name]: target.validationMessage\n    });\n    setIsValid(target.closest('form').checkValidity());\n  };\n\n  const resetForm = useCallback((newValues = {}, newErrors = {}, newIsValid = false) => {\n    setValues(newValues);\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n  }, [setValues, setErrors, setIsValid]);\n  return {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    resetForm\n  };\n}\n\n_s(FormValidation, \"msMIfc7pG71dSFDSlZa7+l3GN6k=\");\n\n_c = FormValidation;\nexport default FormValidation;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidation\");","map":{"version":3,"sources":["/Users/dashon/Desktop/news-explorer-frontend/src/components/FormValidation/FormValidation.js"],"names":["React","useCallback","useState","FormValidation","values","setValues","errors","setErrors","isValid","setIsValid","handleChange","event","target","name","value","validationMessage","closest","checkValidity","resetForm","newValues","newErrors","newIsValid"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACE,KAArB;AACAT,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACS,IAAD,GAAQC;AAArB,KAAD,CAAT;AACAP,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACO,IAAD,GAAQD,MAAM,CAACG;AAA5B,KAAD,CAAT;AACAN,IAAAA,UAAU,CAACG,MAAM,CAACI,OAAP,CAAe,MAAf,EAAuBC,aAAvB,EAAD,CAAV;AACH,GAPD;;AASA,QAAMC,SAAS,GAAGjB,WAAW,CACzB,CAACkB,SAAS,GAAG,EAAb,EAAiBC,SAAS,GAAG,EAA7B,EAAiCC,UAAU,GAAG,KAA9C,KAAwD;AACpDhB,IAAAA,SAAS,CAACc,SAAD,CAAT;AACAZ,IAAAA,SAAS,CAACa,SAAD,CAAT;AACAX,IAAAA,UAAU,CAACY,UAAD,CAAV;AACH,GALwB,EAMzB,CAAChB,SAAD,EAAYE,SAAZ,EAAuBE,UAAvB,CANyB,CAA7B;AASA,SAAO;AAAEL,IAAAA,MAAF;AAAUM,IAAAA,YAAV;AAAwBJ,IAAAA,MAAxB;AAAgCE,IAAAA,OAAhC;AAAyCU,IAAAA;AAAzC,GAAP;AACH;;GAxBQf,c;;KAAAA,c;AA0BT,eAAeA,cAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\n\nfunction FormValidation() {\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isValid, setIsValid] = useState(false);\n\n    const handleChange = (event) => {\n        const target = event.target;\n        const name = target.name;\n        const value = target.value;\n        setValues({ ...values, [name]: value });\n        setErrors({ ...errors, [name]: target.validationMessage });\n        setIsValid(target.closest('form').checkValidity());\n    };\n\n    const resetForm = useCallback(\n        (newValues = {}, newErrors = {}, newIsValid = false) => {\n            setValues(newValues);\n            setErrors(newErrors);\n            setIsValid(newIsValid);\n        },\n        [setValues, setErrors, setIsValid]\n    );\n\n    return { values, handleChange, errors, isValid, resetForm };\n}\n\nexport default FormValidation;"]},"metadata":{},"sourceType":"module"}