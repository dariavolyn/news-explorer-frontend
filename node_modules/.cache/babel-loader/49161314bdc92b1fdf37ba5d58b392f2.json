{"ast":null,"code":"import React from'react';import errorImage from\"../images/error.svg\";import successImage from\"../images/success.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function InfoToolTip(props){var isRegistered=props.isRegistered;return/*#__PURE__*/_jsx(\"div\",{className:\"popup popup__message \".concat(props.isOpen?'popup_is_open':''),children:/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup__container popup__container_type-message\",children:[/*#__PURE__*/_jsx(\"button\",{\"aria-label\":\"close\",className:\"button popup__close popup__close-message\",type:\"button\",onClick:props.onClose}),/*#__PURE__*/_jsx(\"img\",{className:\"popup__message-image\",src:isRegistered?successImage:errorImage,alt:isRegistered?\"Success\":\"Error\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"popup__message-text\",children:isRegistered?\"Success! You have now been registered.\":\"Oops, something went wrong! Please try again.\"})]})})});}export default InfoToolTip;","map":{"version":3,"sources":["/Users/dashon/Desktop/react-around-api-full/frontend/src/components/InfoToolTip.js"],"names":["React","InfoToolTip","props","isRegistered","isOpen","onClose","successImage","errorImage"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,oLAIA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4B,CACxB,GAAQC,CAAAA,YAAR,CAAyBD,KAAzB,CAAQC,YAAR,CAEA,mBACI,YAAK,SAAS,gCAA0BD,KAAK,CAACE,MAAN,CAAe,eAAf,CAAiC,EAA3D,CAAd,uBACI,YAAK,SAAS,CAAC,SAAf,uBACI,aAAK,SAAS,CAAC,gDAAf,wBACI,eAAQ,aAAW,OAAnB,CAA2B,SAAS,CAAC,0CAArC,CACI,IAAI,CAAC,QADT,CACkB,OAAO,CAAEF,KAAK,CAACG,OADjC,EADJ,cAGI,YAAK,SAAS,CAAC,sBAAf,CAAsC,GAAG,CAAEF,YAAY,CAAGG,YAAH,CAAkBC,UAAzE,CAAqF,GAAG,CAAEJ,YAAY,CAAG,SAAH,CAAe,OAArH,EAHJ,cAII,WAAI,SAAS,CAAC,qBAAd,UAAqCA,YAAY,CAAG,wCAAH,CAA8C,+CAA/F,EAJJ,GADJ,EADJ,EADJ,CAYH,CAED,cAAeF,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport errorImage from '../images/error.svg';\nimport successImage from '../images/success.svg';\n\nfunction InfoToolTip(props) {\n    const { isRegistered } = props;\n\n    return (\n        <div className={`popup popup__message ${props.isOpen ? 'popup_is_open' : ''}`}>\n            <div className=\"overlay\">\n                <div className=\"popup__container popup__container_type-message\">\n                    <button aria-label=\"close\" className=\"button popup__close popup__close-message\"\n                        type=\"button\" onClick={props.onClose}></button>\n                    <img className=\"popup__message-image\" src={isRegistered ? successImage : errorImage} alt={isRegistered ? \"Success\" : \"Error\"} />\n                    <h2 className=\"popup__message-text\">{isRegistered ? \"Success! You have now been registered.\" : \"Oops, something went wrong! Please try again.\"}</h2>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default InfoToolTip;"]},"metadata":{},"sourceType":"module"}